const { nextGenerations, next } = require('../src/generations');

test('20 Generations', () => {
  const startGrid = [
    [0, 0, 2, 2, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 1, 3, 1, 0, 0, 0],
    [0, 0, 0, 2, 0, 3, 0, 0, 1, 3],
    [0, 0, 0, 0, 1, 3, 0, 0, 0, 3],
    [0, 2, 2, 0, 0, 0, 1, 3, 1, 0],
    [0, 0, 0, 0, 0, 2, 2, 0, 0, 0],
    [0, 0, 2, 0, 2, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 2, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  ];

  const endGrid = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 2, 0, 2, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 2, 0, 0, 2, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 1, 0, 1, 0],
    [0, 0, 0, 0, 2, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 2, 0, 0, 0, 3, 0],
    [0, 0, 0, 0, 2, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 1, 3, 1, 0],
  ];

  expect(nextGenerations(startGrid, 20)).toStrictEqual(endGrid);
});

test('test case 1', () => {
  const startGrid = [
    [0, 0, 2, 2, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 1, 3, 1, 0, 0, 0],
    [0, 0, 0, 2, 0, 3, 0, 0, 1, 3],
    [0, 0, 0, 0, 1, 3, 0, 0, 0, 3],
    [0, 2, 2, 0, 0, 0, 1, 3, 1, 0],
    [0, 0, 0, 0, 0, 2, 2, 0, 0, 0],
    [0, 0, 2, 0, 2, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 2, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  ];

  const endGrid = [
    [0, 0, 3, 3, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 2, 0, 2, 0, 0, 0],
    [0, 0, 0, 3, 0, 0, 0, 0, 2, 0],
    [0, 1, 0, 1, 2, 0, 0, 0, 0, 0],
    [0, 3, 3, 0, 0, 1, 2, 0, 2, 0],
    [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 3, 0, 1, 0, 0, 0],
    [0, 0, 0, 0, 3, 1, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  ];

  expect(next(startGrid)).toStrictEqual(endGrid);
});

test('test case 2', () => {
  const startGrid = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 1, 1, 0, 0, 2, 0, 0, 0],
    [0, 0, 3, 3, 2, 0, 0, 0, 2, 0],
    [0, 1, 0, 0, 0, 0, 0, 0, 2, 0],
    [0, 0, 3, 0, 0, 1, 2, 0, 0, 0],
    [0, 0, 1, 3, 3, 3, 0, 0, 0, 0],
    [0, 0, 0, 1, 0, 1, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  ];

  const endGrid = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 2, 2, 0, 1, 0, 1, 0, 0],
    [0, 0, 0, 0, 3, 1, 0, 0, 3, 1],
    [0, 2, 0, 0, 0, 1, 0, 0, 3, 1],
    [0, 0, 0, 0, 0, 2, 3, 1, 0, 0],
    [0, 0, 2, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 2, 0, 2, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  ];

  expect(next(startGrid)).toStrictEqual(endGrid);
});

test('test case 3', () => {
  const startGrid = [
    [0, 0, 0, 0, 1, 3, 1, 0, 0, 0],
    [0, 0, 0, 0, 0, 3, 0, 0, 0, 0],
    [0, 0, 2, 0, 0, 0, 0, 3, 1, 0],
    [0, 0, 2, 0, 2, 3, 0, 0, 3, 0],
    [0, 0, 2, 0, 0, 0, 0, 3, 0, 0],
    [0, 0, 0, 0, 0, 2, 1, 3, 1, 0],
    [0, 0, 0, 0, 2, 2, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  ];

  const endGrid = [
    [0, 0, 0, 0, 2, 0, 2, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 1, 3, 0, 0, 0, 0, 0, 2, 0],
    [0, 0, 3, 0, 3, 0, 0, 0, 0, 0],
    [0, 1, 3, 0, 1, 1, 0, 0, 0, 0],
    [0, 0, 0, 1, 0, 0, 2, 0, 2, 0],
    [0, 0, 0, 0, 3, 0, 1, 0, 0, 0],
    [0, 0, 0, 0, 1, 1, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  ];

  expect(next(startGrid)).toStrictEqual(endGrid);
});
